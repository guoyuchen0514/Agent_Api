# 公共参数
case_common:
  allureEpic: 服务商后台接口
  allureFeature: 员工管理模块
  allureStory: 权限组配置

Add_PlatformRole:
    host: ${{host()}}
    url: /operation/v1/platformRole/add
    method: POST
    detail: 新增权限组
    headers:
      Content-Type: application/json
      accesstoken: $cache{login_cookie}
    # 请求的数据，是 params 还是 json、或者file、data
    requestType: json
    # 是否执行，空或者 true 都会执行
    is_run:
    data:
      platformType: 2
      roleName: 自动化测试权限组
      menuIds: [273,242,240,244,267,246,333,334,322,305,328,331,332,248,249,236,241,243,266,245,321,304,327,330,247]
    # 是否有依赖业务，为空或者false则表示没有
    dependence_case: False
      # 依赖的数据
    dependence_case_data: None
    assert:
  # 断言接口状态码
      status_code: 200
      Code:
        jsonpath: $.code
        type: ==
        value: 0
        AssertType:
        # 断言接口返回的username
      Status:
        jsonpath: $.status
        type: ==
        value: 0
        AssertType:

    sql:

Query_RoleListByPageID:
    host: ${{host()}}
    url: /operation/v1/platformRole/queryRoleListByPage
    method: GET
    detail: 查询权限组
    headers:
      Content-Type: application/json
      accesstoken: $cache{login_cookie}
    # 请求的数据，是 params 还是 json、或者file、data
    requestType: params
    # 是否执行，空或者 true 都会执行
    is_run: True
    data:
      currentPage: 1
      pageSize: 10
      platformType: 2
      roleName: 自动化测试权限组
    # 是否有依赖业务，为空或者false则表示没有
    dependence_case: False
      # 依赖的数据
    dependence_case_data: None
    assert:
  # 断言接口状态码
      status_code: 200
      Code:
        jsonpath: $.code
        type: ==
        value: 0
        AssertType:
        # 断言接口返回的username
      Status:
        jsonpath: $.status
        type: ==
        value: 0
        AssertType:

    sql:

Edit_PlatformRole:
    host: ${{host()}}
    url: /operation/v1/platformRole/editRoleAndMenu
    method: POST
    detail: 编辑权限组
    headers:
        Content-Type: application/json
        accesstoken: $cache{login_cookie}
    # 请求的数据，是 params 还是 json、或者file、data
    requestType: json
    # 是否执行，空或者 true 都会执行
    is_run:
    data:
        roleId: $cache{Query_RoleListByPageID}
        roleName: 自动化测试权限组4
        platformType: 2
        menuIds: [236,273,241,242,240,243,244,266,267,245,246,333,334,321,322,304,305,327,328,330,331,332,247,248,249]
      # 是否有依赖业务，为空或者false则表示没有
    dependence_case: True
      # 依赖的数据
    dependence_case_data:
        - case_id: Query_RoleListByPageID
          dependent_data:
            - dependent_type: response
              jsonpath: $.data[0].id
              set_cache: Query_RoleListByPageID
    assert:
  # 断言接口状态码
      status_code: 200
      Code:
        jsonpath: $.code
        type: ==
        value: 0
        AssertType:
        # 断言接口返回的username
      Status:
        jsonpath: $.status
        type: ==
        value: 0
        AssertType:

    sql:

Delete_PlatformRole:
    host: ${{host()}}
    url: /operation/v1/platformRole/delete
    method: POST
    detail: 删除权限组
    headers:
        Content-Type: application/json
        accesstoken: $cache{login_cookie}
    # 请求的数据，是 params 还是 json、或者file、data
    requestType: data
    # 是否执行，空或者 true 都会执行
    is_run:
    data:
        id: $cache{Query_RoleListByPageID}
      # 是否有依赖业务，为空或者false则表示没有
    dependence_case: false
      # 依赖的数据
    dependence_case_data:
        - case_id: Query_RoleListByPageID
          dependent_data:
            - dependent_type: response
              jsonpath: $.data[0].id
              set_cache: Query_RoleListByPageID
    assert:
  # 断言接口状态码
      status_code: 200
      Code:
        jsonpath: $.code
        type: ==
        value: 0
        AssertType:
        # 断言接口返回的username
      Status:
        jsonpath: $.status
        type: ==
        value: 0
        AssertType:
      Data:
        jsonpath: $.data
        type: ==
        value: true
        AssertType:
    sql: