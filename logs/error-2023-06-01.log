ERROR2023-06-01 11:03:09,107D:\Agent_Api\logs\error-2023-06-01.log:run_time_decorator.py:27 
==============================================
测试用例执行时间较长，请关注.
函数运行时间: 4314 ms
测试用例相关数据: url='https://api.pre.lianok.com/common/v1/user/login' is_run=True detail='正常登录' response_data='{"status":0,"code":0,"message":null,"param":null,"data":{"flag":false,"accessToken":"04d5e4f274db41cdb5812cf0509cb047","user":{"id":1108,"deleted":null,"createTime":"2022-10-13T09:53:41","updateTime":"2022-10-13T09:53:41","system":"agent","managementType":1,"parentNumber":"0","channelAgentCode":"zicai","number":"285171","company":"小熊测试服务商","name":"小熊测试服务商","phone":"15617886089","loginAccount":null,"password":"39ee488c7696d8f3ee3456218666a3c9","email":null,"sex":null,"jobName":null,"img":null,"provinceCode":"330000","cityCode":"330100","areaCode":"330102","roleId":1,"managerId":null,"infoStatus":4,"status":"normal","userInfo":null,"superiorId":null,"authenticationCode":null,"authorizeCode":null,"thirdPartyJson":null,"type":null,"typeDescription":null,"otherInfo":null,"jobNumber":null,"birthday":null,"position":null,"nickName":null,"userType":1,"topAgentInfo":null,"agentInfo":null,"merchantInfo":null,"merchantEmployeeInfo":null,"partnerInfo":null,"identityData":null,"voiceBroadcastConfig":null,"creator":null,"editor":null,"remark":null,"client":null,"partnerNo":null,"agentNo":null,"partnerGroupNo":null,"shopQrCode":null}}}' request_body={'phone': '15617886089', 'password': 'zxc123456', 'type': 'password', 'system': 'agent'} method='POST' sql_data={'sql': None} yaml_data=TestCase(url='https://api.pre.lianok.com/common/v1/user/login', method='POST', detail='正常登录', assert_data={'status_code': 200, 'Code': {'jsonpath': '$.code', 'type': '==', 'value': 0, 'AssertType': None}, 'Status': {'jsonpath': '$.status', 'type': '==', 'value': 0, 'AssertType': None}, 'Msg': {'jsonpath': '$.data.user.company', 'type': '==', 'value': '小熊测试服务商', 'AssertType': None}}, headers={'Content-Type': 'application/json'}, requestType='JSON', is_run=True, data={'phone': '15617886089', 'password': 'zxc123456', 'type': 'password', 'system': 'agent'}, dependence_case=False, dependence_case_data=None, sql=None, setup_sql=None, status_code=None, teardown_sql=None, teardown=None, current_request_set_cache=None, sleep=None) headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '88'} cookie={} assert_data={'status_code': 200, 'Code': {'jsonpath': '$.code', 'type': '==', 'value': 0, 'AssertType': None}, 'Status': {'jsonpath': '$.status', 'type': '==', 'value': 0, 'AssertType': None}, 'Msg': {'jsonpath': '$.data.user.company', 'type': '==', 'value': '小熊测试服务商', 'AssertType': None}} res_time=4314 status_code=200 teardown=None teardown_sql=None body={'phone': '15617886089', 'password': 'zxc123456', 'type': 'password', 'system': 'agent'}
=================================================
ERROR2023-06-01 11:39:31,407D:\Agent_Api\logs\error-2023-06-01.log:regular_control.py:281 未找到对应的替换的数据, 请检查数据是否正确 [{'url': 'https://api.pre.lianok.com/agent/v1/deviceinfo/page/query', 'method': 'GET', 'detail': '设备列表', 'assert_data': {'status_code': 200, 'Code': {'jsonpath': '$.code', 'type': '==', 'value': 0, 'AssertType': None}, 'Status': {'jsonpath': '$.status', 'type': '==', 'value': 0, 'AssertType': None}}, 'headers': {'Content-Type': 'application/json', 'accesstoken': '$cache{login_cookie}'}, 'requestType': 'PARAMS', 'is_run': True, 'data': {'currentPage': '1', 'pageSize': '20'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}, {'url': 'https://api.pre.lianok.com/agent/v1/deviceinfo/page/query', 'method': 'GET', 'detail': '查询绑定时间为2023-6-1的设备列表', 'assert_data': {'status_code': 200, 'Code': {'jsonpath': '$.code', 'type': '==', 'value': 0, 'AssertType': None}, 'Status': {'jsonpath': '$.status', 'type': '==', 'value': 0, 'AssertType': None}}, 'headers': {'Content-Type': 'application/json', 'accesstoken': '$cache{login_cookie}'}, 'requestType': 'PARAMS', 'is_run': True, 'data': {'currentPage': '1', 'pageSize': '20', 'bindDate': '${{this_month_start()}}'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}, {'url': '${{host()}}/agent/v1/deviceinfo/page/query', 'method': 'GET', 'detail': '查询绑定到百果园水果100036的设备', 'assert_data': {'status_code': 200, 'Code': {'jsonpath': '$.code', 'type': '==', 'value': 0, 'AssertType': None}, 'Status': {'jsonpath': '$.status', 'type': '==', 'value': 0, 'AssertType': None}}, 'headers': {'Content-Type': 'application/json', 'accesstoken': '$cache{login_cookie}'}, 'requestType': 'PARAMS', 'is_run': True, 'data': {'currentPage': '1', 'pageSize': '20', 'shopNo': '100036'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}, {'url': '${{host()}}/agent/v1/deviceinfo/page/query', 'method': 'GET', 'detail': '查询归属于小熊测试拓展组的设备', 'assert_data': {'status_code': 200, 'Code': {'jsonpath': '$.code', 'type': '==', 'value': 0, 'AssertType': None}, 'Status': {'jsonpath': '$.status', 'type': '==', 'value': 0, 'AssertType': None}}, 'headers': {'Content-Type': 'application/json', 'accesstoken': '$cache{login_cookie}'}, 'requestType': 'PARAMS', 'is_run': True, 'data': {'currentPage': '1', 'pageSize': '20', 'partnerGroupNo': '100017'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}, {'url': '${{host()}}/agent/v1/deviceinfo/page/query', 'method': 'GET', 'detail': '查询设备类型为POS的设备', 'assert_data': {'status_code': 200, 'Code': {'jsonpath': '$.code', 'type': '==', 'value': 0, 'AssertType': None}, 'Status': {'jsonpath': '$.status', 'type': '==', 'value': 0, 'AssertType': None}}, 'headers': {'Content-Type': 'application/json', 'accesstoken': '$cache{login_cookie}'}, 'requestType': 'PARAMS', 'is_run': True, 'data': {'currentPage': '1', 'pageSize': '20', 'deviceType': '101'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}, {'url': '${{host()}}/agent/v1/deviceinfo/page/query', 'method': 'GET', 'detail': '查询设备型号为CG10的设备', 'assert_data': {'status_code': 200, 'Code': {'jsonpath': '$.code', 'type': '==', 'value': 0, 'AssertType': None}, 'Status': {'jsonpath': '$.status', 'type': '==', 'value': 0, 'AssertType': None}}, 'headers': {'Content-Type': 'application/json', 'accesstoken': '$cache{login_cookie}'}, 'requestType': 'PARAMS', 'is_run': True, 'data': {'currentPage': '1', 'pageSize': '20', 'deviceModelId': '6', 'id': '6'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}, {'url': '${{host()}}/agent/v1/deviceinfo/page/query', 'method': 'GET', 'detail': '查询属于百果园水果商户账号的设备', 'assert_data': {'status_code': 200, 'Code': {'jsonpath': '$.code', 'type': '==', 'value': 0, 'AssertType': None}, 'Status': {'jsonpath': '$.status', 'type': '==', 'value': 0, 'AssertType': None}}, 'headers': {'Content-Type': 'application/json', 'accesstoken': '$cache{login_cookie}'}, 'requestType': 'PARAMS', 'is_run': True, 'data': {'currentPage': '1', 'pageSize': '20', 'merchantNo': '100018'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}, {'url': '${{host()}}/agent/v1/deviceinfo/page/query', 'method': 'GET', 'detail': '查询绑定状态为已绑定的设备', 'assert_data': {'status_code': 200, 'Code': {'jsonpath': '$.code', 'type': '==', 'value': 0, 'AssertType': None}, 'Status': {'jsonpath': '$.status', 'type': '==', 'value': 0, 'AssertType': None}}, 'headers': {'Content-Type': 'application/json', 'accesstoken': '$cache{login_cookie}'}, 'requestType': 'PARAMS', 'is_run': True, 'data': {'currentPage': '1', 'pageSize': '20', 'currentStatus': '3'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}, {'url': '${{host()}}/agent/v1/deviceinfo/page/query', 'method': 'GET', 'detail': '查询授权码为空的设备', 'assert_data': {'status_code': 200, 'Code': {'jsonpath': '$.code', 'type': '==', 'value': 0, 'AssertType': None}, 'Status': {'jsonpath': '$.status', 'type': '==', 'value': 0, 'AssertType': None}}, 'headers': {'Content-Type': 'application/json', 'accesstoken': '$cache{login_cookie}'}, 'requestType': 'PARAMS', 'is_run': True, 'data': {'currentPage': '1', 'pageSize': '10', 'deviceLicenseEmpty': '1'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
ERROR2023-06-01 11:45:57,232D:\Agent_Api\logs\error-2023-06-01.log:regular_control.py:281 未找到对应的替换的数据, 请检查数据是否正确 [{'url': 'https://api.pre.lianok.com/agent/v1/deviceinfo/page/query', 'method': 'GET', 'detail': '测试Demo01', 'assert_data': {'status_code': 200, 'Code': {'jsonpath': '$.code', 'type': '==', 'value': 0, 'AssertType': None}, 'Status': {'jsonpath': '$.status', 'type': '==', 'value': 0, 'AssertType': None}}, 'headers': {'Content-Type': 'application/json', 'accesstoken': '$cache{login_cookie}'}, 'requestType': 'PARAMS', 'is_run': True, 'data': {'currentPage': '1', 'pageSize': '20', 'bindDate': '${{this_month_start()}}'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
ERROR2023-06-01 11:48:50,842D:\Agent_Api\logs\error-2023-06-01.log:regular_control.py:281 未找到对应的替换的数据, 请检查数据是否正确 [{'url': 'https://api.pre.lianok.com/agent/v1/deviceinfo/page/query', 'method': 'GET', 'detail': '测试Demo01', 'assert_data': {'status_code': 200, 'Code': {'jsonpath': '$.code', 'type': '==', 'value': 0, 'AssertType': None}, 'Status': {'jsonpath': '$.status', 'type': '==', 'value': 0, 'AssertType': None}}, 'headers': {'Content-Type': 'application/json', 'accesstoken': '$cache{login_cookie}'}, 'requestType': 'PARAMS', 'is_run': True, 'data': {'currentPage': '1', 'pageSize': '20', 'bindDate': '${{this_month_start()}}'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
ERROR2023-06-01 11:50:07,085D:\Agent_Api\logs\error-2023-06-01.log:regular_control.py:281 未找到对应的替换的数据, 请检查数据是否正确 [{'url': 'https://api.pre.lianok.com/agent/v1/deviceinfo/page/query', 'method': 'GET', 'detail': '测试Demo01', 'assert_data': {'status_code': 200, 'Code': {'jsonpath': '$.code', 'type': '==', 'value': 0, 'AssertType': None}, 'Status': {'jsonpath': '$.status', 'type': '==', 'value': 0, 'AssertType': None}}, 'headers': {'Content-Type': 'application/json', 'accesstoken': '$cache{login_cookie}'}, 'requestType': 'PARAMS', 'is_run': True, 'data': {'currentPage': '1', 'pageSize': '20', 'bindDate': '${{this_month_start()}}'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
ERROR2023-06-01 11:52:41,775D:\Agent_Api\logs\error-2023-06-01.log:regular_control.py:281 未找到对应的替换的数据, 请检查数据是否正确 [{'url': 'https://api.pre.lianok.com/agent/v1/deviceinfo/page/query', 'method': 'GET', 'detail': '测试Demo01', 'assert_data': {'status_code': 200, 'Code': {'jsonpath': '$.code', 'type': '==', 'value': 0, 'AssertType': None}, 'Status': {'jsonpath': '$.status', 'type': '==', 'value': 0, 'AssertType': None}}, 'headers': {'Content-Type': 'application/json', 'accesstoken': '$cache{login_cookie}'}, 'requestType': 'PARAMS', 'is_run': True, 'data': {'currentPage': '1', 'pageSize': '20', 'bindDate': '${{this_month_start()}}'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
ERROR2023-06-01 14:35:01,760D:\Agent_Api\logs\error-2023-06-01.log:regular_control.py:282 未找到对应的替换的数据, 请检查数据是否正确 [{'url': 'https://api.pre.lianok.com/agent/v1/deviceinfo/page/query', 'method': 'GET', 'detail': '测试Demo01', 'assert_data': {'status_code': 200, 'Code': {'jsonpath': '$.code', 'type': '==', 'value': 0, 'AssertType': None}, 'Status': {'jsonpath': '$.status', 'type': '==', 'value': 0, 'AssertType': None}}, 'headers': {'Content-Type': 'application/json', 'accesstoken': '$cache{login_cookie}'}, 'requestType': 'PARAMS', 'is_run': True, 'data': {'currentPage': '1', 'pageSize': '20', 'bindDate': '${{this_month_start()}}'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
ERROR2023-06-01 14:44:28,719D:\Agent_Api\logs\error-2023-06-01.log:regular_control.py:293 未找到对应的替换的数据, 请检查数据是否正确 [{'url': 'https://api.pre.lianok.com/agent/v1/deviceinfo/page/query', 'method': 'GET', 'detail': '测试Demo01', 'assert_data': {'status_code': 200, 'Code': {'jsonpath': '$.code', 'type': '==', 'value': 0, 'AssertType': None}, 'Status': {'jsonpath': '$.status', 'type': '==', 'value': 0, 'AssertType': None}}, 'headers': {'Content-Type': 'application/json', 'accesstoken': '$cache{login_cookie}'}, 'requestType': 'PARAMS', 'is_run': True, 'data': {'currentPage': '1', 'pageSize': '20', 'bindDate': '${{this_month_start()}}'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
ERROR2023-06-01 14:45:44,551D:\Agent_Api\logs\error-2023-06-01.log:regular_control.py:293 未找到对应的替换的数据, 请检查数据是否正确 [{'url': 'https://api.pre.lianok.com/agent/v1/deviceinfo/page/query', 'method': 'GET', 'detail': '测试Demo01', 'assert_data': {'status_code': 200, 'Code': {'jsonpath': '$.code', 'type': '==', 'value': 0, 'AssertType': None}, 'Status': {'jsonpath': '$.status', 'type': '==', 'value': 0, 'AssertType': None}}, 'headers': {'Content-Type': 'application/json', 'accesstoken': '$cache{login_cookie}'}, 'requestType': 'PARAMS', 'is_run': True, 'data': {'currentPage': '1', 'pageSize': '20', 'bindDate': '${{this_month_start()}}'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
ERROR2023-06-01 14:50:32,818D:\Agent_Api\logs\error-2023-06-01.log:regular_control.py:293 未找到对应的替换的数据, 请检查数据是否正确 [{'url': 'https://api.pre.lianok.com/agent/v1/deviceinfo/page/query', 'method': 'GET', 'detail': '测试Demo01', 'assert_data': {'status_code': 200, 'Code': {'jsonpath': '$.code', 'type': '==', 'value': 0, 'AssertType': None}, 'Status': {'jsonpath': '$.status', 'type': '==', 'value': 0, 'AssertType': None}}, 'headers': {'Content-Type': 'application/json', 'accesstoken': '$cache{login_cookie}'}, 'requestType': 'PARAMS', 'is_run': True, 'data': {'currentPage': '1', 'pageSize': '20', 'bindDate': '${{firstDay()}}'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
ERROR2023-06-01 14:54:02,920D:\Agent_Api\logs\error-2023-06-01.log:regular_control.py:290 未找到对应的替换的数据, 请检查数据是否正确 [{'url': 'https://api.pre.lianok.com/agent/v1/deviceinfo/page/query', 'method': 'GET', 'detail': '测试Demo01', 'assert_data': {'status_code': 200, 'Code': {'jsonpath': '$.code', 'type': '==', 'value': 0, 'AssertType': None}, 'Status': {'jsonpath': '$.status', 'type': '==', 'value': 0, 'AssertType': None}}, 'headers': {'Content-Type': 'application/json', 'accesstoken': '$cache{login_cookie}'}, 'requestType': 'PARAMS', 'is_run': True, 'data': {'currentPage': '1', 'pageSize': '20', 'bindDate': '${{firstDay()}}'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
ERROR2023-06-01 15:06:24,094D:\Agent_Api\logs\error-2023-06-01.log:regular_control.py:281 未找到对应的替换的数据, 请检查数据是否正确 [{'url': 'https://api.pre.lianok.com/agent/v1/deviceinfo/page/query', 'method': 'GET', 'detail': '测试Demo01', 'assert_data': {'status_code': 200, 'Code': {'jsonpath': '$.code', 'type': '==', 'value': 0, 'AssertType': None}, 'Status': {'jsonpath': '$.status', 'type': '==', 'value': 0, 'AssertType': None}}, 'headers': {'Content-Type': 'application/json', 'accesstoken': '$cache{login_cookie}'}, 'requestType': 'PARAMS', 'is_run': True, 'data': {'currentPage': '1', 'pageSize': '20', 'bindDate': '${{firstDay()}}'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
ERROR2023-06-01 15:07:55,425D:\Agent_Api\logs\error-2023-06-01.log:regular_control.py:281 未找到对应的替换的数据, 请检查数据是否正确 [{'url': 'https://api.pre.lianok.com/agent/v1/deviceinfo/page/query', 'method': 'GET', 'detail': '测试Demo01', 'assert_data': {'status_code': 200, 'Code': {'jsonpath': '$.code', 'type': '==', 'value': 0, 'AssertType': None}, 'Status': {'jsonpath': '$.status', 'type': '==', 'value': 0, 'AssertType': None}}, 'headers': {'Content-Type': 'application/json', 'accesstoken': '$cache{login_cookie}'}, 'requestType': 'PARAMS', 'is_run': True, 'data': {'currentPage': '1', 'pageSize': '20', 'bindDate': '${{MonthFirstDay()}}'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
ERROR2023-06-01 15:46:01,037D:\Agent_Api\logs\error-2023-06-01.log:regular_control.py:293 未找到对应的替换的数据, 请检查数据是否正确 [{'url': 'https://api.pre.lianok.com/agent/v1/commissionSettle/getAgentCommissionSettleMonth', 'method': 'POST', 'detail': '获取服务商佣金数据', 'assert_data': {'status_code': 200, 'Code': {'jsonpath': '$.code', 'type': '==', 'value': 0, 'AssertType': None}, 'Status': {'jsonpath': '$.status', 'type': '==', 'value': 0, 'AssertType': None}}, 'headers': {'Content-Type': 'application/json', 'accesstoken': '$cache{login_cookie}'}, 'requestType': 'JSON', 'is_run': True, 'data': {'queryBeginTime': '${{get_six_month_FirstDay()}}', 'queryEndTime': '${{MonthFirstDay()}}'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
ERROR2023-06-01 16:17:21,264D:\Agent_Api\logs\error-2023-06-01.log:regular_control.py:295 未找到对应的替换的数据, 请检查数据是否正确 [{'url': 'https://api.pre.lianok.com/agent/v1/commissionSettle/getAgentCommissionSettleMonth', 'method': 'POST', 'detail': '获取服务商佣金数据', 'assert_data': {'status_code': 200, 'Code': {'jsonpath': '$.code', 'type': '==', 'value': 0, 'AssertType': None}, 'Status': {'jsonpath': '$.status', 'type': '==', 'value': 0, 'AssertType': None}}, 'headers': {'Content-Type': 'application/json', 'accesstoken': '$cache{login_cookie}'}, 'requestType': 'JSON', 'is_run': True, 'data': {'queryBeginTime': '${{get_six_month_FirstDay()}}', 'queryEndTime': '${{MonthFirstDay()}}'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
ERROR2023-06-01 17:11:40,247D:\Agent_Api\logs\error-2023-06-01.log:log_decorator.py:48 
======================================================
用例标题: 查询结算明细
请求路径: https://api.pre.lianok.com/agent/v1/agentSettle/getApplyInfo
请求方式: POST
请求头:   {'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'accesstoken': '00f1abcdb6a44c1d8105396a5e473017', 'Content-Length': '15'}
请求内容: {'ids': '5040'}
接口响应内容: {"timestamp":"2023-06-01T09:11:40.513+0000","status":400,"error":"Bad Request","message":"JSON parse error: Cannot deserialize instance of `java.util.ArrayList` out of VALUE_STRING token; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of `java.util.ArrayList` out of VALUE_STRING token\n at [Source: (PushbackInputStream); line: 1, column: 9] (through reference chain: com.aduer.business.agent.api.entity.vo.request.QueryApplyInfoRequestVO[\"ids\"])","path":"/agent/v1/agentSettle/getApplyInfo"}
接口响应时长: 100 ms
Http状态码: 400
=====================================================
ERROR2023-06-01 17:12:11,102D:\Agent_Api\logs\error-2023-06-01.log:log_decorator.py:48 
======================================================
用例标题: 查询结算明细
请求路径: https://api.pre.lianok.com/agent/v1/agentSettle/getApplyInfo
请求方式: POST
请求头:   {'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'accesstoken': 'dc2d8d2b3a6e43cc9ccc16c78736119c', 'Content-Length': '17'}
请求内容: {'ids': '[5040]'}
接口响应内容: {"timestamp":"2023-06-01T09:12:11.359+0000","status":400,"error":"Bad Request","message":"JSON parse error: Cannot deserialize instance of `java.util.ArrayList` out of VALUE_STRING token; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of `java.util.ArrayList` out of VALUE_STRING token\n at [Source: (PushbackInputStream); line: 1, column: 9] (through reference chain: com.aduer.business.agent.api.entity.vo.request.QueryApplyInfoRequestVO[\"ids\"])","path":"/agent/v1/agentSettle/getApplyInfo"}
接口响应时长: 97 ms
Http状态码: 400
=====================================================
ERROR2023-06-01 17:14:33,857D:\Agent_Api\logs\error-2023-06-01.log:log_decorator.py:48 
======================================================
用例标题: 查询结算明细
请求路径: https://api.pre.lianok.com/agent/v1/agentSettle/getApplyInfo
请求方式: POST
请求头:   {'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'accesstoken': '9c8e4250d4bb48b59b05e9eee05f1717', 'Content-Length': '15'}
请求内容: {'ids': '5040'}
接口响应内容: {"timestamp":"2023-06-01T09:14:34.123+0000","status":400,"error":"Bad Request","message":"JSON parse error: Cannot deserialize instance of `java.util.ArrayList` out of VALUE_STRING token; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of `java.util.ArrayList` out of VALUE_STRING token\n at [Source: (PushbackInputStream); line: 1, column: 9] (through reference chain: com.aduer.business.agent.api.entity.vo.request.QueryApplyInfoRequestVO[\"ids\"])","path":"/agent/v1/agentSettle/getApplyInfo"}
接口响应时长: 67 ms
Http状态码: 400
=====================================================
