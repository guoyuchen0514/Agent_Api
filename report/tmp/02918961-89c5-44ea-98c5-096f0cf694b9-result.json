{"name": "test_Add_User[新增员工]", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_Add_User.TestAddUser object at 0x000001FB347F6D90>\nin_data = {'assert_data': {'Code': {'AssertType': None, 'jsonpath': '$.code', 'type': '==', 'value': 0}, 'Status': {'AssertType'...ne, 'data': {'agentNo': None, 'id': None, 'name': '自动化测试员工', 'phone': 19893647823, ...}, 'dependence_case': False, ...}\ncase_skip = None\n\n    @allure.story(\"员工操作\")\n    @pytest.mark.parametrize('in_data', eval(re_data), ids=[i['detail'] for i in TestData])\n    def test_Add_User(self, in_data, case_skip):\n        \"\"\"\n        :param :\n        :return:\n        \"\"\"\n        res = RequestControl(in_data).http_request()\n        TearDownHandler(res).teardown_handle()\n>       Assert(in_data['assert_data']).assert_equality(response_data=res.response_data,\n                                                       sql_data=res.sql_data, status_code=res.status_code)\n\ntest_case\\Employee_Manage\\test_Add_User.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nutils\\assertion\\assertion_control.py:155: in assert_equality\n    self.assert_type_handle(\nutils\\assertion\\assertion_control.py:123: in assert_type_handle\n    self.functions_mapping[name](resp_data[0], assert_value, message)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncheck_value = 1, expect_value = 0, message = ''\n\n    def equals(\n            check_value: Any, expect_value: Any, message: Text =\"\"\n    ):\n        \"\"\"判断是否相等\"\"\"\n    \n>       assert check_value == expect_value , message\nE       AssertionError\n\nutils\\assertion\\assert_type.py:22: AssertionError"}, "description": "\n        :param :\n        :return:\n        ", "steps": [{"name": "请求URL: https://api.pre.lianok.com/agent/v1/user/addUser", "status": "passed", "start": 1689065371421, "stop": 1689065371421}, {"name": "请求方式: POST", "status": "passed", "start": 1689065371421, "stop": 1689065371421}, {"name": "请求头: ", "status": "passed", "attachments": [{"name": "请求头: ", "source": "6eaee4a8-1015-4f42-8067-7586d8d136ac-attachment.json", "type": "application/json"}], "start": 1689065371421, "stop": 1689065371421}, {"name": "请求数据: ", "status": "passed", "attachments": [{"name": "请求数据: ", "source": "6e556e18-f043-49f9-b14b-41334d6a431e-attachment.json", "type": "application/json"}], "start": 1689065371421, "stop": 1689065371421}, {"name": "预期数据: ", "status": "passed", "attachments": [{"name": "预期数据: ", "source": "9a5db3fa-13e9-4724-a326-78d8551e89fd-attachment.json", "type": "application/json"}], "start": 1689065371421, "stop": 1689065371421}, {"name": "响应耗时(ms): 59", "status": "passed", "start": 1689065371421, "stop": 1689065371421}, {"name": "响应结果: ", "status": "passed", "attachments": [{"name": "响应结果: ", "source": "b5d3eb98-4384-4cf4-9643-524859e29521-attachment.json", "type": "application/json"}], "start": 1689065371421, "stop": 1689065371421}], "attachments": [{"name": "log", "source": "8d3ea966-9312-48f9-a2a1-cfe1f106cc4e-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "in_data", "value": "{'url': 'https://api.pre.lianok.com/agent/v1/user/addUser', 'method': 'POST', 'detail': '新增员工', 'assert_data': {'status_code': 200, 'Code': {'jsonpath': '$.code', 'type': '==', 'value': 0, 'AssertType': None}, 'Status': {'jsonpath': '$.status', 'type': '==', 'value': 0, 'AssertType': None}}, 'headers': {'Content-Type': 'application/json', 'accesstoken': '$cache{login_cookie}'}, 'requestType': 'JSON', 'is_run': True, 'data': {'agentNo': None, 'id': None, 'name': '自动化测试员工', 'phone': 19893647823, 'remark': '自动化测试员工', 'roleId': 159}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}"}], "start": 1689065371359, "stop": 1689065371423, "uuid": "a0ac7263-99df-49d0-bcca-7b7a5199ff1f", "historyId": "fe3b65bf96a02b37397f7ce9bc41a179", "testCaseId": "7d8df496401a2f91d8424f99a177e7a1", "fullName": "test_case.Employee_Manage.test_Add_User.TestAddUser#test_Add_User", "labels": [{"name": "epic", "value": "服务商后台接口"}, {"name": "feature", "value": "员工管理模块"}, {"name": "story", "value": "员工操作"}, {"name": "parentSuite", "value": "test_case.Employee_Manage"}, {"name": "suite", "value": "test_Add_User"}, {"name": "subSuite", "value": "TestAddUser"}, {"name": "host", "value": "puti"}, {"name": "thread", "value": "3416-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.Employee_Manage.test_Add_User"}]}